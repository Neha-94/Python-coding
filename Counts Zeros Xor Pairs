/*Given an array A[] of size N. Find the number of pairs (i, j) such that  A_i  XOR  A_j  = 0, and 1 <= i < j <= N.

Input:
The first line of the input contains a single integer T denoting the number of test cases. The first line of each test case contains N. followed by N separate integers. 

Output:
For each test case, output a single integer i.e counts of Zeros Xors Pairs

Constraints
1 ≤ T ≤ 200
2 ≤ N ≤ 10^5
1 ≤ A[i] ≤ 10^5
*/
for i in range(0,int(input())):
  arr_size=int(input())
  arr=list(map(int,input().split()))
  pairs=0
  for i in range(0,len(arr)):
    c=0
    for j in range(i+1,len(arr)):
      if(arr[i]==arr[j]):
        c+=1
      if(c==1):
        pairs+=1
        c=0
  print(pairs)
